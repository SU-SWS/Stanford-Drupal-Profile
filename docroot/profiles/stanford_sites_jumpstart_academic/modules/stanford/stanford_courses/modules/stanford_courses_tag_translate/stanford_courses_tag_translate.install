<?php
/**
 * @file
 */

/**
 * Implements hook_install().
 *
 * Look up wether or not the feed importer we want to modify is in the database.
 * If the settings are in the datbase then we need to alter it and save it back.
 * If the settings are in code do nothing and let the alters to their work.
 *
 */
function stanford_courses_tag_translate_install() {

  ctools_include('export');

  // Check to see if the importer has been modified and is in the database.
  $importers = ctools_export_load_object('feeds_importer', 'conditions', array('id' => 'stanford_course_importer'));

  // Does not exist. This is strange but end anyway. Should we log here?
  if (!isset($importers['stanford_course_importer']) || empty($importers["stanford_course_importer"])) {
    return;
  }

  // If the export is in code we don't need to do anything as the alters will do the work.
  if ($importers['stanford_course_importer']->export_type !== EXPORT_IN_CODE) {
    // Run the importer through the alter.
    stanford_courses_tag_translate_feeds_importer_default_alter($importers);

    // Add the stuff and save.
    $save = new stdClass();
    $save->id = "stanford_course_importer";
    $save->config = $importers["stanford_course_importer"]->config;
    drupal_write_record('feeds_importer', $save, 'id');
  }

  // Get and install the views.
  module_load_include("inc", "stanford_courses_tag_translate", "views/views");
  $views = stanford_courses_tag_translate_get_install_views();

  // Loop and save the views.
  foreach ($views as $view) {
    $view->save();
  }

}

/**
 * Implements hook_enable().
 */
function stanford_courses_tag_translate_enable() {}

/**
 * Implements hook_disable().
 */
function stanford_courses_tag_translate_disable() {}

/**
 * Implements hook_uninstall().
 * Remove the human mapping field and tampers.
 */
function stanford_courses_tag_translate_uninstall() {

  ctools_include('export');

  // Get and un-install the views.
  module_load_include("inc", "stanford_courses_tag_translate", "views/views");
  $views = stanford_courses_tag_translate_get_install_views();

  // Loop and remove the views.
  foreach ($views as $machine_name => $view) {
    db_delete("views_view")
      ->condition("name", $machine_name)
      ->execute();
  }

  // Check to see if the importer has been modified and is in the database.
  $importers = ctools_export_load_object('feeds_importer', 'conditions', array('id' => 'stanford_course_importer'));

  // If the importer is in code we don't need to do anything as the alters will
  // do the work.
  if ($importers['stanford_course_importer']->export_type == EXPORT_IN_CODE) {
    return;
  }

  $importer = $importers['stanford_course_importer'];

  // If the human mapping is in the database pull it out of the importer.
  // Get the xpath count for this by finding the mapping to the human field.
  $xcount = NULL;
  $config = $importer->config;
  $options = $config['processor']['config']["mappings"];

  // The mapping is usually at tha back of the pile.
  $options = array_reverse($options);
  foreach ($options as $opt) {
    if ($opt['target'] == "field_s_course_tag_human") {
      $xcount = (int) str_replace("xpathparser:", "", $opt['source']);
      break;
    }
  }

  // No altering if the field was not found.
  if (!$xcount) {
    return;
  }

  // Remove all the human stuff.
  unset($config['parser']['config']['sources']["xpathparser:" . $xcount]);
  unset($config['parser']['config']['rawXML']["xpathparser:" . $xcount]);
  unset($config['parser']['config']["exp"]['debug']["xpathparser:" . $xcount]);
  unset($config['processor']['config']['mappings'][$xcount]);

  $save = new stdClass();
  $save->id = "stanford_course_importer";
  $save->config = $config;
  drupal_write_record('feeds_importer', $save, 'id');

}


/**
 * Implements hook_schema().
 *
 * For storing the key = value translations of tags in to human readable labels.
 * The ctid field is used for creating menu paths for edit/delete.
 */
function stanford_courses_tag_translate_schema() {
  $schema['stanford_courses_tag'] = array(
    'description' => 'Mapping table for course tags from explorecourses to a human readable field.',
    'fields' => array(
      'ctid' => array(
        'description' => 'The primary identifier for a tag translation.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'ctag' => array(
        'description' => 'the tag from explore courses',
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 255
      ),
      'chuman' => array(
        'description' => 'human readable translation',
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 255
      ),
    ),
    'indexes' => array(
      'course_tag' => array('ctag'),
      'tag_human' => array('ctag', 'chuman'),
    ),
    'unique keys' => array(
      'ctag' => array('ctag')
    ),
    'primary key' => array('ctid'),
  );
  return $schema;
}
