<?php
/**
 * @file
 */


/**
 * Field update change. Remove list based field_s_person_type and replace with
 * a taxonomy term field called field_s_person_affiliation.
 *
 * 1. Check if vocabulary exists. If not create it. If it does get machine_name
 * 2. For every value in the field_s_person_type create a taxonomy term in the affiliations vocab.
 * 3a. Copy the values from field_s_person_type to field_s_person_affiliation.
 * 3b. Remove the field_s_person_type field from the content type.
 *
 */
function stanford_person_update_7500(&$sandbox) {

  // 1. Check if vocabulary exists. If not create it. If it does get machine_name
  // 2. For every value in the field_s_person_type create a taxonomy term in the affiliations vocab.
  // 3a. Copy the values from field_s_person_type to field_s_person_affiliation.
  // 3b. Remove the field_s_person_type field from the content type.
  // 4. Check the views in the feature for the field_s_person_type field and remove it
  // 5. Add the new affiliation field to the views.

  // 0. Check if the field exists. Die if gone.
  $field = field_info_field("field_s_person_type");
  $new_field = field_info_field("field_s_person_affiliation");

  if (!$field) {
    watchdog('stanford_person', 'field_s_person_type was not found', array(), WATCHDOG_NOTICE);
    return;
  }

  // 1. Check if vocabulary exists and create it if it does not.
  $vocab = taxonomy_vocabulary_machine_name_load("stanford_affiliation");
  if (!$vocab) {
    include "stanford_person.features.taxonomy.inc";
    $options = stanford_person_taxonomy_default_vocabularies();
    $vocab = (object) $options['stanford_affiliation'];
    taxonomy_vocabulary_save($vocab);
    $vocab = taxonomy_vocabulary_machine_name_load("stanford_affiliation");
  }

  // Gosh darnit! The field is not avilable. Get it!
  if (!$new_field) {

    include_once "stanford_person.features.field_base.inc";
    include_once "stanford_person.features.field_instance.inc";
    $bases = stanford_person_field_default_field_bases();
    $instances = stanford_person_field_default_field_instances();

    $field_base = $bases["field_s_person_affiliation"];
    $field_instance = $instances["node-stanford_person-field_s_person_affiliation"];

    field_create_field($field_base);
    field_create_instance($field_instance);

    // Clear static caches and get new one.
    drupal_static_reset();
    $new_field = field_info_field("field_s_person_affiliation");

  }

  // 2. Save the new terms into the vocabulary.
  $values = $field['settings']['allowed_values'];
  foreach ($values as $name => $label) {
    $term = taxonomy_get_term_by_name($label, $vocab->machine_name);
    if (!$term) {
      $term = new stdClass();
      $term->name = $label;
      $term->vocabulary_machine_name = $vocab->machine_name;
      $term->vid = $vocab->vid;
      taxonomy_term_save($term);
    }
  }

  // 3a. Copy the values from field_s_person_type to field_s_person_affiliation.
  $tree = taxonomy_get_tree($vocab->vid);
  $mapped = array();

  foreach ($tree as $k => $term) {
    $mapped[strtolower($term->name)] = $term->tid;
  }

  // Get existing field and entity information.
  $qselect = db_select("field_data_field_s_person_type", "fdfspt");
  $qselect->join("node", "n", "n.nid = fdfspt.entity_id");
  $qselect->fields("fdfspt", array("entity_id", "field_s_person_type_value", "delta"));
  $qselect->addField("n", "vid");
  $qselect->addField("n", "type");
  $qselect->addField("n", "language");
  $qresults = $qselect->execute();

  // Loop through the results and insert the data into the field.
  while ($result = $qresults->fetchObject()) {

    // Insert value array.
    $values = array(
      'entity_type' => "node",
      'bundle' => $result->type,
      'deleted' => 0,
      'entity_id' => $result->entity_id,
      'revision_id' => $result->vid,
      'language' => $result->language,
      'delta' => $result->delta,
      'field_s_person_affiliation_tid' => $mapped[strtolower($result->field_s_person_type_value)],
    );

    // Data table.
    db_merge("field_data_field_s_person_affiliation")
      ->key(array(
        'entity_id' => $result->entity_id,
        'revision_id' => $result->vid,
        'delta' => $result->delta,
      ))
      ->fields($values)
      ->execute();

    // Revision table.
    db_merge("field_revision_field_s_person_affiliation")
      ->key(array(
        'entity_id' => $result->entity_id,
        'revision_id' => $result->vid,
        'delta' => $result->delta,
      ))
      ->fields($values)
      ->execute();
  }

  // 3b. Remove the field_s_person_type field from the content type.
  field_delete_field("field_s_person_type");
  field_purge_batch(100);
}

/**
 * Implements hook_install().
 */
function stanford_person_install() {

  // Add the DS region blocks variables.
  stanford_person_set_ds_region_blocks();
}

/**
 * Implements hook_uninstall().
 */
function stanford_person_uninstall() {

  // Remove the DS region blocks variables.
  $settings = variable_get('ds_extras_region_blocks', array());
  unset($settings['office_hours']);
  unset($settings['contact']);
  unset($settings['research_interests']);
  variable_set('ds_extras_region_blocks', $settings);
}

/**
 * Implements hook_update_N().
 */
function stanford_person_update_7501(&$sandbox) {
  stanford_person_set_ds_region_blocks();
}

/**
 * Set the DS region block values.
 */
function stanford_person_set_ds_region_blocks() {

  // Add the DS region blocks variables.
  $settings = variable_get('ds_extras_region_blocks', array());
  
  if (!isset($settings['office_hours'])) {
    $settings['office_hours'] = array(
      'title' => t('Office Hours'),
      'info' => 'node_stanford_person_full',
    );
  }
  else {
    watchdog('stanford_person', '%msg', array('%msg' => 'DS extras Office Hours in use'), WATCHDOG_NOTICE);
  }

  if (!isset($settings['contact'])) {
    $settings['contact'] = array(
      'title' => t('Contact'),
      'info' => 'node_stanford_person_full',
    );
  }
  else {
    watchdog('stanford_person', '%msg', array('%msg' => 'DS extras Contact in use'), WATCHDOG_NOTICE);
  }

  if (!isset($settings['research_interests'])) {
    $settings['research_interests'] = array(
      'title' => t('Research Interests'),
      'info' => 'node_stanford_person_full',
    );
  }
  else {
    watchdog('stanford_person', '%msg', array('%msg' => 'DS extras Research Interests in use'), WATCHDOG_NOTICE);
  }

  variable_set('ds_extras_region_blocks', $settings );
}
