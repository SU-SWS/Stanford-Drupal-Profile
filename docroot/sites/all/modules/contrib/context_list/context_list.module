<?php
/**
 * @file
 * Context list module
 */

/**
 * Implements hook_menu().
 */
function context_list_menu() {
  $items = array();
  $items['admin/structure/context/contexts_list'] = array(
    'title' => 'List of contexts',
    'type' => MENU_LOCAL_TASK,
    'page callback' => 'context_list_contexts',
    'access arguments' => array('access administration pages'),
    'weight' => 10,
  );
  return $items;
}

/**
 * The list of contexts page
 */
function context_list_contexts() {
  $page = array();

  $page['intro'] = array(
    '#markup' => '<p>' . t('Below is a list of each context and their related settings') . '</p>',
  );

  $rows = array();
  $header = array('Context', 'Conditions', 'Reactions');

  $contexts = context_context_list();
  sort($contexts);
  foreach ($contexts as $context_name) {
    $context = context_load($context_name);
    array_push(
      $rows,
      array(
        l($context_name, 'admin/structure/context/list/' . $context_name . '/edit') . '<div class="description">' . $context->description . '</div>',
        context_list_conditions($context->conditions),
        context_list_reactions($context->reactions),
      )
    );
  }

  $page['table'] = array(
    '#theme' => 'table',
    '#rows' => $rows,
    '#header' => $header,
    '#empty' => t('There are no contexts'),
  );

  return $page;
}

/**
 * Create the list of conditions
 *
 * @param array $conditions
 *   The context's conditions
 *
 * @return string
 *   The HTML output
 */
function context_list_conditions($conditions) {
  module_load_include('inc', 'context_list', 'context_list.plugins');

  static $context_list_condition_displays;

  if (!$context_list_condition_displays) {
    $context_list_condition_displays = module_invoke_all('context_list_register_condition_display');
  }

  $condition_description = array();

  foreach ($conditions as $condition => $settings) {
    $display_class = $context_list_condition_displays['all'];
    if (isset($context_list_condition_displays[$condition])) {
      $display_class = $context_list_condition_displays[$condition];
    }

    $display = new $display_class();
    $display->condition = $condition;
    $display->settings = $settings;

    array_push($condition_description, $display->display());
  }

  return '<ol>' . implode("\n", array_map('context_list_create_list_items', $condition_description)) . '</ol>';
}

/**
 * Return an array of strings as an array of list items
 *
 * @param string $item
 *   The item
 *
 * @return string
 *   List items
 */
function context_list_create_list_items($item) {
  return '<li>' . $item . '</li>';
}

/**
 * Create the list of reactions for a context
 *
 * @param array $reactions
 *   The array of reactions for a context
 *
 * @return string
 *   The HTML output
 */
function context_list_reactions($reactions) {
  module_load_include('inc', 'context_list', 'context_list.plugins');

  static $context_list_reaction_displays;

  if (!$context_list_reaction_displays) {
    $context_list_reaction_displays = module_invoke_all('context_list_register_reaction_display');
  }

  $reaction_description = array();

  if (count($reactions) == 0) {
    return t('No reactions');
  }

  foreach ($reactions as $reaction => $settings) {
    $display_class = 'ContextListReactionDisplay';

    if (class_exists('ContextListReactionDisplay_' . $reaction)) {
      $display_class = 'ContextListReactionDisplay_' . $reaction;
    }
    $display = new $display_class();
    $display->reaction = $reaction;
    $display->settings = $settings;

    array_push($reaction_description, $display->display());
  }

  return '<ol>' . implode("\n",
    array_map('context_list_create_list_items', $reaction_description)
  ) . '</ol>';
}
