<?php

/**
 * @file
 * Primary file context_list_active module
 */

/**
 * Implements hook_admin_menu_output_build().
 */
function context_list_active_admin_menu_output_build(&$content) {
  // Add our toggle link
  $content['context-list-active'] = array(
    // We want to be weighted after 'account' (weight 100) because there seems to be a little rendering bug with the
    // account drop down when there is an extra link to the right of it.
    '#weight' => 200,
    '#theme' => 'admin_menu_links',
    '#wrapper_attributes' => array('id' => 'admin-menu-context-list-active'),
  );
  $content['context-list-active']['toggle'] = array(
    '#attributes' => array('class' => array('admin-menu-action', 'context-list-active-toggle')),
    '#access' => user_access('administer contexts'),
    '#title' => t('Show active contexts'),
    '#href' => '',
  );

}

/**
 * Implements hook_page_build().
 */
function context_list_active_page_build(&$page) {
  // Don't show active contexts unless the user has 'administer contexts' permissions
  if (!user_access('administer contexts')) {
    return;
  }

  // Include our CSS and JS
  $path_to_module = drupal_get_path('module', 'context_list_active');
  drupal_add_css("$path_to_module/context_list_active.css");
  drupal_add_js("$path_to_module/context_list_active.js");

  // Get all the active contexts on this page
  $contexts = context_active_contexts();

  // Iterate through each active context and add it to a table row, with edit links and descriptions
  $rows = array();
  $header = array('Context', 'Conditions', 'Reactions');
  foreach ($contexts as $context) {
    $row = array(
      $context->name . ' ' . l('[edit]', 'admin/structure/context/list/' . $context->name . '/edit') . '<div class="description">' . $context->description . '</div>',
      context_list_conditions($context->conditions),
      context_list_active_reactions($context->reactions),
    );

    // Add the row
    $rows[] = $row;
  }

  // Build the renderable array for the table
  $table = array(
    '#caption' => '<h2>Active contexts</h2> <h3>Current page: ' . url(current_path()) . '</h3>',
    '#theme'   => 'table',
    '#rows'    => $rows,
    '#header'  => $header,
    '#empty'   => t('There are no active contexts for this page.'),
  );

  $page['page_bottom']['context_list_active'] = array(
    '#type'       => 'container',
    '#attributes' => array('id' => 'context_list_active'),
    'container'   => array(
      '#type'       => 'container',
      '#attributes' => array('id' => 'context_list_active-overlay'),
      'table'       => $table,
      'close'       => array('#markup' => '<a class="context-list-active-toggle" href="javascript:;" >Close [X}</a>'),
    ),
    'fade'        => array('#markup' => '<div id="context_list_active-fade"></div>')
  );

  // If the admin menu is present, our implementation of it's build hook will add the toggle link there, otherwise we'll
  // insert a link at the bottom of the page.
  if (!module_exists('admin_menu')) {
    // Add toggle link:
    $page['page_bottom']['context_list_active']['toggle'] = array(
      '#markup' => '<div id="context-list-active-bottom"><a class="context-list-active-toggle" href="javascript:;" >Toggle context browser</a></div>',
    );
  }
}

/**
 * A duplicate of context_list_reactions(), except we use our custom display class for blocks
 */
function context_list_active_reactions($reactions) {
  // We'll extend a class found in this file
  module_load_include('inc', 'context_list', 'context_list.plugins');

  // Our extending class - The class we are extending does not use Drupal's dynamic code loading registry, so neither do we.
  module_load_include('inc', 'context_list_active', 'context_list.class');

  static $context_list_reaction_displays;

  if (!$context_list_reaction_displays) {
    $context_list_reaction_displays = module_invoke_all('context_list_register_reaction_display');
  }

  $reaction_description = array();

  if (count($reactions) == 0) {
    return t('No reactions');
  }

  foreach ($reactions as $reaction => $settings) {
    $display_class = 'ContextListReactionDisplay';

    if (class_exists('ContextListReactionDisplay_' . $reaction)) {
      $display_class = 'ContextListReactionDisplay_' . $reaction;
    }
    // Override this class with our own version
    if ($display_class == 'ContextListReactionDisplay_block') {
      $display_class = 'ContextListReactionDisplay_blockWithName';
    }
    $display = new $display_class;
    $display->reaction = $reaction;
    $display->settings = $settings;

    array_push($reaction_description, $display->display());
  }

  return '<ol>' . implode("\n",
    array_map('context_list_create_list_items', $reaction_description)
  ) . '</ol>';
}
