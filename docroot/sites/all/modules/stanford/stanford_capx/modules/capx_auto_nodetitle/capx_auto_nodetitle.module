<?php
/**
 * @file
 * File description
 *
 * Long description
 */

/**
 * Implements hook_form_alter().
 */
function capx_auto_nodetitle_form_alter(&$form, &$form_state, $form_id) {

  switch ($form_id) {
    case 'stanford_capx_mapper_form':
      capx_auto_nodetitle_mapper_form_alter($form, $form_state);
      break;
  }

}

/**
 * Removes the title field from a mapper where an auto_nodetitle is present.
 * @param  [type] &$form       [description]
 * @param  [type] &$form_state [description]
 * @return
 *     [description]
 */
function capx_auto_nodetitle_mapper_form_alter(&$form, &$form_state) {

  // Go away if no node properties.
  if (!isset($form['field-mapping']['node-properties'])) {
    return;
  }

  // Some node bundles may have ANT settings and others may not but they use
  // the same properties form. Instead of creating new property forms for each
  // node bundle we find lets just get rid of the required property and handle
  // the condition in the validate hook...

  $key = array_search("required", $form['field-mapping']['node-properties']["title"]["#attributes"]["class"]);
  if ($key !== FALSE) {
    unset($form['field-mapping']['node-properties']['title']['#attributes']['class'][$key]);
  }

  $form["#validate"][] = "capx_auto_nodetitle_mapper_form_alter_validate";
}


/**
 * Validation function to ensure that someone did not put a value into the
 * title property field when a node/bundle has an ANT patter.
 * @param  [type] $form        [description]
 * @param  [type] &$form_state [description]
 */
function capx_auto_nodetitle_mapper_form_alter_validate($form, &$form_state) {

  $values = $form_state["values"];
  $entity_type = $values["entity-type"];
  $bundle_type = $values["bundle-node"];
  $title = $values["field-mapping"]["node-properties"]["title"];

  // Only on nodes...
  if ($entity_type !== "node") {
    return;
  }

  // Remove the title errors from the main validation function.
  $errors = &drupal_static('form_set_error', array());
  $name = "field-mapping][node-properties][title";
  $removed_messages = array();
  if (isset($errors[$name])) {
    $removed_messages[] = $errors[$name];
    unset($errors[$name]);
  }

  if (!empty($removed_messages)) {
    $_SESSION['messages']['error'] = array_diff($_SESSION['messages']['error'], $removed_messages);
  }

  // Ok we are on a node look up the bundle ant settings in the variable table.
  $setting = variable_get("ant_" . $bundle_type, 0);

  // Ant settings:
  // 0: Off
  // 1: Automatically generate the title and hide the title field.
  // 2: Automatically generate the title if the title field is left empty.
  if ($setting == "1") {
    // Node title is enabled. Check to see if there was a value in the title.
    if (!empty($title)) {
      form_set_error("field-mapping][node-properties][title", "The " . $bundle_type . " node type has an auto_nodetitle setting enabled. You cannot map a CAP value to the title property. To change the auto_nodetitle please edit the setting on the " . l(t("manage content type page"), "admin/structure/types/manage/" . $bundle_type, array("attributes" => array("target" => "_blank"))));
    }
  }
  else {
    if (empty($title)) {
      form_set_error("field-mapping][node-properties][title", "The title node property is required");
    }
  }

}
