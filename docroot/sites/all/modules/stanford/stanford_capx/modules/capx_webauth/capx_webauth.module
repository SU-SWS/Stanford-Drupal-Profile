<?php
/**
 * @file
 * Code for the capx_webauth module.
 *
 */

/**
 * Implements hook_help().
 */
function capx_webauth_help($path, $arg) {
  switch ($path) {
    case 'capx#ssp':
      return '<p>' . t('No help available.') . '</p>';
  }
}

/**
 * Add the authmap when a user entity is created.
 *
 * @param object $entity
 *   The entity that was just created by capx.
 * @param array $data
 *   The data from the API.
 */
function capx_webauth_capx_post_entity_create_alter($entity, $data) {

  // We only want users.
  if ($entity->type() !== "user" || $entity->getBundle() !== "user") {
    return;
  }

  // We cannot assume that the email is available nor can we assume the email
  // that is mapped is the sunet version. In order to enforce the mapping it
  // needs to be the sunetid from the api.

  if (!isset($data['uid'])) {
    watchdog("capx_webauth", "Entity %type with ID %id did not have a sunet available. Webauth link not created.", array("%type" => "user", "%id" => $entity->uid), WATCHDOG_ALERT);
    return;
  }

  // User ID from the entity.
  $uid = $entity->getIdentifier();

  // Sunet ID from API.
  $sunet = $data['uid'] . "@stanford.edu";

  // Add the authmap to the table.
  db_merge("authmap")
    ->key(array('uid' => $uid, 'authname' => $sunet))
    ->fields(array(
      'uid' => $uid,
      'authname' => $sunet,
      'module' => 'webauth',
    ))
    ->execute();
}
