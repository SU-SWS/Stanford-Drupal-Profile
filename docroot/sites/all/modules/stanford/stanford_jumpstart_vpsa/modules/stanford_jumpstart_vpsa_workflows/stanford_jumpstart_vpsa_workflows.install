<?php
/**
 * @file
 * Installation tasks
 */

/**
 * Implements hook_install().
 */
function stanford_jumpstart_vpsa_workflows_install() {
  $content_types = stanford_jumpstart_vpsa_workflows_get_content_types();

  foreach ($content_types as $machine_name => $pub_status) {

    $variable_name = 'node_options_' . $machine_name;
    $var = variable_get($variable_name, array());

    // Check to see if content type exist
    if (!node_type_load($machine_name)) {
      continue;
    }

    // Set default state.
    variable_set('workbench_moderation_default_state_' . $machine_name, $pub_status);

    // Remove status.
    $var = array_diff($var, array('status'));

    // Add moderation.
    if (!in_array('moderation', $var)) {
      $var[] = "moderation";
    }

    // Add revision.
    if (!in_array('revision', $var)) {
      $var[] = "revision";
    }

    variable_set($variable_name, $var);
  }

  // Add a transition because the features export does not work well with
  // installatio profiles.

  db_insert('workbench_moderation_transitions')
    ->fields(array(
      'from_name' => 'draft',
      'to_name' => 'published',
      )
    )
    ->execute();

}

/**
 * Returns an array of machine names that should be enabled by default.
 * @return [type] [description]
 */
function stanford_jumpstart_vpsa_workflows_get_content_types() {
  return array(
    'article' => 'draft',
    // 'vpsa_landing_page' => 'draft',
    // 'stanford_news_item' => 'draft',
    'page' => 'draft',
    // 'stanford_event' => 'draft',
    // 'stanford_event_importer' => 'published',
    // 'stanford_video' => 'published',
    // 'stanford_slide' => 'published',
    // 'stanford_page' => 'draft',
  );
}
